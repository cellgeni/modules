nextflow_process {

    name "Test Process IMAGESEGMENTATIONMETRICS"
    script "../main.nf"
    process "IMAGESEGMENTATIONMETRICS"

    tag "modules"
    tag "modules_nfcore"
    tag "imagesegmentationmetrics"

    test("imagesegmentationmetrics - csv") {

        when {
            process {
                """
                input[0] = [
                    "meta",
                    file('/lustre/scratch127/cellgen/cellgeni/yc6/Anno_UMAP/ref.tif', checkIfExists: true),
                    [file('/lustre/scratch127/cellgen/cellgeni/yc6/Anno_UMAP/label_removed_10.tif', checkIfExists: true),
                        file('/lustre/scratch127/cellgen/cellgeni/yc6/Anno_UMAP/label_removed_20.tif', checkIfExists: true),
                        file('/lustre/scratch127/cellgen/cellgeni/yc6/Anno_UMAP/label_removed_50.tif', checkIfExists: true)
                    ],
                    "DiceMetric MeanIoU GeneralizedDiceScore HausdorffDistanceMetric SurfaceDistanceMetric SurfaceDiceMetric MSEMetric MAEMetric RMSEMetric PSNRMetric"
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("imagesegmentationmetrics - csv - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    "meta",
                    file('/lustre/scratch127/cellgen/cellgeni/yc6/Anno_UMAP/ref.tif', checkIfExists: true),
                    [file('/lustre/scratch127/cellgen/cellgeni/yc6/Anno_UMAP/label_removed_10.tif', checkIfExists: true),
                        file('/lustre/scratch127/cellgen/cellgeni/yc6/Anno_UMAP/label_removed_20.tif', checkIfExists: true),
                        file('/lustre/scratch127/cellgen/cellgeni/yc6/Anno_UMAP/label_removed_50.tif', checkIfExists: true)
                    ],
                    "DiceMetric MeanIoU GeneralizedDiceScore HausdorffDistanceMetric SurfaceDistanceMetric SurfaceDiceMetric MSEMetric MAEMetric RMSEMetric PSNRMetric"
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
