// nf-core modules test bioinfotongli/tiledspotiflow
nextflow_process {

    name "Test Process BIOINFOTONGLI_TILEDSPOTIFLOW"
    script "../main.nf"
    process "BIOINFOTONGLI_TILEDSPOTIFLOW"

    tag "modules"
    tag "modules_sanger"
    tag "bioinfotongli"
    tag "bioinfotongli/tiledspotiflow"

    test("mouse_heart - tiff") {

        when {
            process {
                """
                input[0] = [
                    [ id:'mouse_heart'],
                    0, 0, 200, 200,
                    file(params.modules_testdata_base_path + 'imaging/tiff/mindagap.mouse_heart.wga.tiff', checkIfExists: true),
                    0
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("mouse_heart - tiff - 500") {

        when {
            process {
                """
                input[0] = [
                    [ id:'mouse_heart'],
                    0, 0, 500, 500,
                    file(params.modules_testdata_base_path + 'imaging/tiff/mindagap.mouse_heart.wga.tiff', checkIfExists: true),
                    0
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("mouse_heart - tiff - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = [
                    [ id:'mouse_heart'],
                    0, 0, 200, 200,
                    file(params.modules_testdata_base_path + 'imaging/tiff/mindagap.mouse_heart.wga.tiff', checkIfExists: true),
                    0
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
